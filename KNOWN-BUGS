drbdadm up fails if the backing device was newly created with the
	partition manager.

Kernel log says: 

Aug 16 19:32:57 192.168.56.101  U16:25:44.600|0131b660 open_backing_dev <3>drbd w0/17 minor 26, ds(Diskless), dvflag(0x0): open("\Device\HarddiskVolume5") failed with -13

Relevant data from drbd.conf:

device /dev/sda3 

(this partition was just created and drbdadm create-md didn't fail)

Now trying to reboot and see if the problem persists.

Update: after reboot /dev/sda and /dev/sdb are swapped, so we changed 
it to: 

device /dev/sda3 

However, same problem (rebooting didn't fix it)

Aug 17 18:37:21 192.168.56.101  U16:21:17.664|01321040 open_backing_dev <3>drbd w0/17 minor 26, ds(Diskless), dvflag(0x0): open("\Device\HarddiskVolume5") failed with -13

Update: Some printk's showed that pvext list is empty in blkdev_get_by_link.

Update: Research showed that AddDevice (and AddDeviceList) is only called
for devices that are created while the driver is already running (at least
on my Windows box). For example if you create a new partition on a hard 
drive and drbd is loaded, the AddDevice handler is called, but only for
that newly created device. Hence at the point in time the driver is
started, the internal list of devices is empty (existing volumes don't
show up in the list). 

I am not sure if the win4lin internal duplication is really needed. I will
check and remove it (replacing it by something like FindVolumeByName(),
I am sure there is something in the NT kernel). 

-------------------------------------------------------------------------

Windows does not boot any more once DRBD driver is installed. 

It fails at loading drbd.sys (shown by Windows 7 repair utility).

It also fails if the driver does nothing (return SUCCESS right at the
	beginning)

-------------------------------------------------------------------------

drbdadm down hangs on a partially configured resource

Resource was configured partially (failed because disk didn't exist: kernel
log: 
Aug 17 18:14:47 192.168.56.101  U16:14:37.177|01321b50 get_targetdev_volsize <3>[0xFFFFFA8001321B50] TargetDeviceObject is null!
this behaves as expected).

Further drbdadm up failed with:

$ ./drbd-up.sh
w0: Failure: (162) Invalid configuration request
additional info from kernel:
peer connection already exists
Command '/tmp/drbd/bin/drbdsetup new-peer w0 1 --_name=ubuntu-gnome --use-rle=no --protocol=A' terminated with exit code 10

The down command was never completed:
$ ./drbd-op.sh down
w0: timed out waiting for reply
Command '/tmp/drbd/bin/drbdsetup down w0' terminated with exit code 20

kernel log:

Aug 17 18:15:44 192.168.56.101  U16:15:34.140|01321b50 NetlinkWorkThread <6>[0xFFFFFA8001321B50] done
Aug 17 18:16:37 192.168.56.101  U16:16:27.275|0131b660 NetlinkWorkThread <6>[0xFFFFFA800131B660] drbd cmd(DRBD_ADM_GET_RESOURCES:30)
Aug 17 18:16:37 192.168.56.101  U16:16:27.275|0131b660 NetlinkWorkThread <6>[0xFFFFFA800131B660] drbd cmd(DRBD_ADM_GET_DEVICES:31)
Aug 17 18:16:37 192.168.56.101  U16:16:27.291|0131b660 NetlinkWorkThread <6>[0xFFFFFA800131B660] drbd cmd(DRBD_ADM_DOWN:27)
Aug 17 18:16:37 192.168.56.101  U16:16:27.291|038c91c0 win_drbd_thread_setup <6>[0xFFFFFA80038C91C0] stopped.

-------------------------------------------------------------------------

/dev/sda and /dev/sdb are sometimes swapped.

This is something we probably can't fix, but we need to map the devices
properly to the internal windows kernel device names.

--------------------------------------------------------------------------

AddDevice is called when any Block Device is created on the system. For
example when a new partition is created (probably also when a USB disk is
attached, didn't test that). It seems to me that it should check if the 
newly created device is a drbd device (/dev/drbdN). 

------------------------------------------------------------------------

All drbd devices are called drbd (without a number). The sprintf is wrong
This should be easy to fix.

------------------------------------------------------------------------
