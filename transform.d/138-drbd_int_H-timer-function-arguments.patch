diff --git i/drbd/drbd_int.h w/drbd/drbd_int.h
index a9afac8c..3e99fd94 100644
--- i/drbd/drbd_int.h
+++ w/drbd/drbd_int.h
@@ -2783,4 +2783,12 @@ static inline struct drbd_connection *first_connection(struct drbd_resource *res
 
 #define NODE_MASK(id) ((u64)1 << (id))
 
+
+static inline int  repost_up_to_date_fn_win(KDPC *dpc, void * data, void *sysarg1, void *sysarg2) { (void)dpc; (void)sysarg1; (void)sysarg2;  repost_up_to_date_fn((ULONG_PTR)data); return STATUS_SUCCESS; }
+static inline int       resync_timer_fn_win(KDPC *dpc, void * data, void *sysarg1, void *sysarg2) { (void)dpc; (void)sysarg1; (void)sysarg2;       resync_timer_fn((ULONG_PTR)data); return STATUS_SUCCESS; }
+static inline int queued_twopc_timer_fn_win(KDPC *dpc, void * data, void *sysarg1, void *sysarg2) { (void)dpc; (void)sysarg1; (void)sysarg2; queued_twopc_timer_fn((ULONG_PTR)data); return STATUS_SUCCESS; }
+static inline int        twopc_timer_fn_win(KDPC *dpc, void * data, void *sysarg1, void *sysarg2) { (void)dpc; (void)sysarg1; (void)sysarg2;        twopc_timer_fn((ULONG_PTR)data); return STATUS_SUCCESS; }
+static inline int      connect_timer_fn_win(KDPC *dpc, void * data, void *sysarg1, void *sysarg2) { (void)dpc; (void)sysarg1; (void)sysarg2;      connect_timer_fn((ULONG_PTR)data); return STATUS_SUCCESS; }
+static inline int start_resync_timer_fn_win(KDPC *dpc, void * data, void *sysarg1, void *sysarg2) { (void)dpc; (void)sysarg1; (void)sysarg2; start_resync_timer_fn((ULONG_PTR)data); return STATUS_SUCCESS; }
+
 #endif
