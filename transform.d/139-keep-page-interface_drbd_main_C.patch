diff --git a/drbd/drbd_main.c b/drbd/drbd_main.c
index f3414b6..f332da2 100644
--- a/drbd/drbd_main.c
+++ b/drbd/drbd_main.c
@@ -2089,23 +2089,15 @@ static int _drbd_no_send_page(struct drbd_peer_device *peer_device, struct page
 			      int offset, size_t size, unsigned msg_flags)
 {
 	struct drbd_connection *connection = peer_device->connection;
-	struct drbd_send_buffer *sbuf = &connection->send_buffer[DATA_STREAM];
-	char *from_base;
-	void *buffer2;
+	struct drbd_transport *transport = &connection->transport;
+	struct drbd_transport_ops *tr_ops = transport->ops;
 	int err;
 
-	buffer2 = alloc_send_buffer(connection, size, DATA_STREAM);
-	from_base = drbd_kmap_atomic(page, KM_USER0);
-	memcpy(buffer2, from_base + offset, size);
-	drbd_kunmap_atomic(from_base, KM_USER0);
-
-	if (msg_flags & MSG_MORE) {
-		sbuf->pos += sbuf->allocated_size;
-		sbuf->allocated_size = 0;
-		err = 0;
-	} else {
-		err = flush_send_buffer(connection, DATA_STREAM);
-	}
+	WDRBD_TRACE_RS("offset(%d) size(%d)\n", offset, size);
+	flush_send_buffer(connection, DATA_STREAM); 
+	err = tr_ops->send_page(transport, DATA_STREAM, page, offset, size, msg_flags);
+	if (!err)
+		peer_device->send_cnt += size >> 9;
 
 	return err;
 }
@@ -2113,28 +2105,19 @@ static int _drbd_no_send_page(struct drbd_peer_device *peer_device, struct page
 static int _drbd_send_bio(struct drbd_peer_device *peer_device, struct bio *bio)
 {
 	struct drbd_connection *connection = peer_device->connection;
-	DRBD_BIO_VEC_TYPE bvec;
-	DRBD_ITER_TYPE iter;
+	struct page page;
+	int err;
 
 	/* Flush send buffer and make sure PAGE_SIZE is available... */
 	alloc_send_buffer(connection, PAGE_SIZE, DATA_STREAM);
 	connection->send_buffer[DATA_STREAM].allocated_size = 0;
 
-	/* hint all but last page with MSG_MORE */
-	bio_for_each_segment(bvec, bio, iter) {
-		int err;
-
-		err = _drbd_no_send_page(peer_device, bvec->bv_page,
-					 bvec->bv_offset, bvec->bv_len,
-					 bio_iter_last(bvec, iter) ? 0 : MSG_MORE);
-		if (err)
-			return err;
-		/* REQ_WRITE_SAME has only one segment */
-		if (bio_op(bio) == REQ_OP_WRITE_SAME)
-			break;
+	page.addr = bio->bio_databuf;
+	err = _drbd_no_send_page(peer_device, &page, 0, bio->bi_size, 0);
+	if (err)
+		return err;
+	peer_device->send_cnt += (bio->bi_size) >> 9;
 
-		peer_device->send_cnt += (bvec->bv_len) >> 9;
-	}
 	return 0;
 }
 
@@ -2186,21 +2169,9 @@ static int _drbd_send_zc_ee(struct drbd_peer_device *peer_device,
 	int err;
 
 	flush_send_buffer(peer_device->connection, DATA_STREAM);
-	/* hint all but last page with MSG_MORE */
-	page_chain_for_each(page) {
-		unsigned l = min_t(unsigned, len, PAGE_SIZE);
-		if (page_chain_offset(page) != 0 ||
-		    page_chain_size(page) != l) {
-			drbd_err(peer_device, "FIXME page %p offset %u len %u\n",
-				page, page_chain_offset(page), page_chain_size(page));
-		}
-
-		err = _drbd_send_page(peer_device, page, 0, l,
-				      page_chain_next(page) ? MSG_MORE : 0);
-		if (err)
-			return err;
-		len -= l;
-	}
+	err = _drbd_no_send_page(peer_device, page, 0, len, 0);
+	if (err)
+		return err;
 	return 0;
 }
 
